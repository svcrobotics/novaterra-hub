<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "NovaTerra IDE" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag "tailwind", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
  
    <!-- CodeMirror CSS + Thèmes -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/codemirror.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/neo.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/elegant.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/material.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/solarized.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/dracula.min.css">
    <%= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/material-darker.min.css" %>
    <%= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/darcula.min.css" %>
    <%= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/one-dark.min.css" %>
    <%= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/3024-night.min.css" %>
    <%= stylesheet_link_tag "codemirror-novaterra", media: "all" %>

    <!-- CodeMirror JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/codemirror.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/mode/ruby/ruby.min.js"></script>

    <link href="https://fonts.googleapis.com/css2?family=Fira+Code&family=Source+Code+Pro&display=swap" rel="stylesheet">

  </head>

  <body class="h-screen w-screen overflow-hidden bg-gray-50">
    <%= yield %>
    <script>
      function makeResizable(resizerId, leftPanelSelector, rightPanelSelector, direction = 'horizontal') {
        const resizer = document.getElementById(resizerId);
        const leftPanel = document.querySelector(leftPanelSelector);
        const rightPanel = document.querySelector(rightPanelSelector);

        let startX, startWidthLeft, startWidthRight;

        resizer.addEventListener("mousedown", function (e) {
          startX = e.clientX;
          startWidthLeft = leftPanel.offsetWidth;
          startWidthRight = rightPanel.offsetWidth;

          document.addEventListener("mousemove", resize);
          document.addEventListener("mouseup", stopResize);
        });

        function resize(e) {
          const dx = e.clientX - startX;
          leftPanel.style.width = (startWidthLeft + dx) + "px";
          rightPanel.style.width = (startWidthRight - dx) + "px";
        }

        function stopResize() {
          document.removeEventListener("mousemove", resize);
          document.removeEventListener("mouseup", stopResize);
        }
      }

      document.addEventListener("DOMContentLoaded", () => {
        makeResizable("resizer-right", ".flex-col.flex-1", "aside.w-80");
        makeResizable("resizer-left", "aside.w-64", ".flex-col.flex-1");
      });
    </script>


    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // CodeMirror
        const textarea = document.getElementById("content");

        if (textarea) {
          const editor = CodeMirror.fromTextArea(textarea, {
            lineNumbers: true,
            mode: "ruby",
            theme: "novaterra",
            indentUnit: 2,
            tabSize: 2
          });

          editor.setSize("100%", "70vh");

          // Appliquer les valeurs par défaut
          editor.getWrapperElement().style.fontFamily = "Monaco";
          editor.getWrapperElement().style.fontSize = "16px";
          editor.getScrollerElement().style.paddingBottom = "2rem";

          // Synchronisation avant submit
          const form = textarea.closest("form");
          if (form) {
            form.addEventListener("submit", () => {
              textarea.value = editor.getValue();
            });
          }

          // === Apparence dynamique ===
          const themeSelect = document.getElementById("theme-selector");
          const fontSelect = document.getElementById("font-selector");
          const fontSizeSelect = document.getElementById("font-size-selector");

          if (themeSelect) {
            themeSelect.addEventListener("change", () => {
              editor.setOption("theme", themeSelect.value);
            });
          }

          if (fontSelect) {
            fontSelect.addEventListener("change", () => {
              editor.getWrapperElement().style.fontFamily = fontSelect.value;
            });
          }

          if (fontSizeSelect) {
            fontSizeSelect.addEventListener("change", () => {
              editor.getWrapperElement().style.fontSize = fontSizeSelect.value;
            });
          }

          // Valeurs initiales
          editor.getWrapperElement().style.fontFamily = fontSelect?.value || "Monaco";
          editor.getWrapperElement().style.fontSize = fontSizeSelect?.value || "16px";
        }

        // Explorer : sauvegarde des dossiers ouverts
        document.querySelectorAll("details").forEach(detail => {
          const key = `explorer-folder-${detail.querySelector("summary")?.textContent?.trim()}`;

          // Restaure l'état
          if (localStorage.getItem(key) === "open") {
            detail.setAttribute("open", true);
          }

          // Sauvegarde l'état
          detail.addEventListener("toggle", () => {
            localStorage.setItem(key, detail.open ? "open" : "closed");
          });
        });
      });
    </script>

  </body>
</html>
